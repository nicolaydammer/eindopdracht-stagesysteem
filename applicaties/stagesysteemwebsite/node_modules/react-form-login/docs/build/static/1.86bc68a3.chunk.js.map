{"version":3,"sources":["webpack:///static/1.86bc68a3.chunk.js","webpack:///./DOCS.md?b5d9","webpack:///./DOCS.md"],"names":["webpackJsonp","595","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","597"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,KAAAG,YACAA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAAT,EAAA,OAEhBU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,IACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/1.86bc68a3.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 595:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(6);\n    var createReactClass = __webpack_require__(32);\n    var PageRenderer = __webpack_require__(210).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(597)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!./node_modules/raw-loader/index.js!./DOCS.md\", function() {\n            component.setState({\n              content: require(\"!!./node_modules/raw-loader/index.js!./DOCS.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 597:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## Usage\\n### 1. Simple use\\n```js\\nimport { LoginForm } from 'react-form-login';\\n\\n<LoginForm\\n  onSubmit={(username, password, isRemember) => {\\n    // Sending AJAX request ...\\n    console.log(username, password, isRemember);\\n  }}\\n/>\\n```\\n### 2. Customizable placeholder, text and classes\\n```js\\nimport { LoginForm } from 'react-form-login';\\n\\n<LoginForm\\n  form={{ className: 'login-form' }}\\n\\n  username={{\\n    placeholder: 'Custom username',\\n    className: 'input-username',\\n    containerClassName: 'input-container'\\n  }}\\n\\n  password={{\\n    placeholder: 'Custom password',\\n    className: 'input-password',\\n    containerClassName: 'input-container'\\n  }}\\n\\n  text={{\\n    rememberMe: 'Custom Remember Me',\\n    submitLabel: 'Custom Sign In'\\n  }}\\n\\n  onSubmit={(username, password, isRemember) => {\\n    console.log(username, password, isRemember);\\n  }}\\n/>\\n```\\n### 3. Handle submit example\\n```js\\nimport {LoginForm} from 'react-form-login';\\nimport {withRouter} from 'react-router-dom';\\nimport {connect} from 'react-redux';\\nimport {login} from 'base/actions';\\n\\nclass Login extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.state = {\\n      loading: false\\n    }\\n\\n    this.handleLogin = this.handleLogin.bind(this);\\n  }\\n\\n  handleLogin(username, password, isRemember) => {\\n    // Show loading\\n    this.setState({\\n      loading: true\\n    });\\n\\n    // dispatch an action\\n    this.props.dispatch(login(username, password, isRemember)).then(response => {\\n      this.setState({loading: false});\\n\\n      // redirect to /profile page in case of success\\n      if (response.isAuthenticated) {\\n        this.props.history.push('/profile');\\n      } else if (response.data.errors) { // Show error in case of login failed\\n        let {status} = response.data;\\n        let {errors} = response.data.data;\\n\\n        if (status === 400) {\\n          let errMessages = {};\\n          errors.map(item => {\\n            errMessages[item.source.pointer] = item.detail;\\n          });\\n\\n          this.setState({\\n            error: errMessages\\n          });\\n        } else {\\n          let message = 'Login failed';\\n          if (errors) {\\n            message = errors.detail || message;\\n            this.setState({\\n              error : {\\n                password: 'Invalid email or password'\\n              }\\n            });\\n          }\\n        }\\n      }\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <LoginForm\\n        onSubmit={this.handleLogin}\\n      />\\n    );\\n  }\\n}\\n\\nexport default connect()(withRouter(Login));\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/1.86bc68a3.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!./node_modules/raw-loader/index.js!./DOCS.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!./node_modules/raw-loader/index.js!./DOCS.md\", function() {\n            component.setState({\n              content: require(\"!!./node_modules/raw-loader/index.js!./DOCS.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./DOCS.md\n// module id = 595\n// module chunks = 1","module.exports = \"## Usage\\n### 1. Simple use\\n```js\\nimport { LoginForm } from 'react-form-login';\\n\\n<LoginForm\\n  onSubmit={(username, password, isRemember) => {\\n    // Sending AJAX request ...\\n    console.log(username, password, isRemember);\\n  }}\\n/>\\n```\\n### 2. Customizable placeholder, text and classes\\n```js\\nimport { LoginForm } from 'react-form-login';\\n\\n<LoginForm\\n  form={{ className: 'login-form' }}\\n\\n  username={{\\n    placeholder: 'Custom username',\\n    className: 'input-username',\\n    containerClassName: 'input-container'\\n  }}\\n\\n  password={{\\n    placeholder: 'Custom password',\\n    className: 'input-password',\\n    containerClassName: 'input-container'\\n  }}\\n\\n  text={{\\n    rememberMe: 'Custom Remember Me',\\n    submitLabel: 'Custom Sign In'\\n  }}\\n\\n  onSubmit={(username, password, isRemember) => {\\n    console.log(username, password, isRemember);\\n  }}\\n/>\\n```\\n### 3. Handle submit example\\n```js\\nimport {LoginForm} from 'react-form-login';\\nimport {withRouter} from 'react-router-dom';\\nimport {connect} from 'react-redux';\\nimport {login} from 'base/actions';\\n\\nclass Login extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.state = {\\n      loading: false\\n    }\\n\\n    this.handleLogin = this.handleLogin.bind(this);\\n  }\\n\\n  handleLogin(username, password, isRemember) => {\\n    // Show loading\\n    this.setState({\\n      loading: true\\n    });\\n\\n    // dispatch an action\\n    this.props.dispatch(login(username, password, isRemember)).then(response => {\\n      this.setState({loading: false});\\n\\n      // redirect to /profile page in case of success\\n      if (response.isAuthenticated) {\\n        this.props.history.push('/profile');\\n      } else if (response.data.errors) { // Show error in case of login failed\\n        let {status} = response.data;\\n        let {errors} = response.data.data;\\n\\n        if (status === 400) {\\n          let errMessages = {};\\n          errors.map(item => {\\n            errMessages[item.source.pointer] = item.detail;\\n          });\\n\\n          this.setState({\\n            error: errMessages\\n          });\\n        } else {\\n          let message = 'Login failed';\\n          if (errors) {\\n            message = errors.detail || message;\\n            this.setState({\\n              error : {\\n                password: 'Invalid email or password'\\n              }\\n            });\\n          }\\n        }\\n      }\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <LoginForm\\n        onSubmit={this.handleLogin}\\n      />\\n    );\\n  }\\n}\\n\\nexport default connect()(withRouter(Login));\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./DOCS.md\n// module id = 597\n// module chunks = 1"],"sourceRoot":""}