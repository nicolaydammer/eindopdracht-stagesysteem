webpackJsonp([1],{595:function(n,e,s){var r=s(6),o=s(32),t=s(210).PageRenderer;t.__esModule&&(t=t.default);var a=o({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:s(597)}},componentWillMount:function(){},render:function(){return r.createElement(t,Object.assign({},this.props,{content:this.state.content}))}});a.__catalog_loader__=!0,n.exports=a},597:function(n,e){n.exports="## Usage\n### 1. Simple use\n```js\nimport { LoginForm } from 'react-form-login';\n\n<LoginForm\n  onSubmit={(username, password, isRemember) => {\n    // Sending AJAX request ...\n    console.log(username, password, isRemember);\n  }}\n/>\n```\n### 2. Customizable placeholder, text and classes\n```js\nimport { LoginForm } from 'react-form-login';\n\n<LoginForm\n  form={{ className: 'login-form' }}\n\n  username={{\n    placeholder: 'Custom username',\n    className: 'input-username',\n    containerClassName: 'input-container'\n  }}\n\n  password={{\n    placeholder: 'Custom password',\n    className: 'input-password',\n    containerClassName: 'input-container'\n  }}\n\n  text={{\n    rememberMe: 'Custom Remember Me',\n    submitLabel: 'Custom Sign In'\n  }}\n\n  onSubmit={(username, password, isRemember) => {\n    console.log(username, password, isRemember);\n  }}\n/>\n```\n### 3. Handle submit example\n```js\nimport {LoginForm} from 'react-form-login';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {login} from 'base/actions';\n\nclass Login extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      loading: false\n    }\n\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleLogin(username, password, isRemember) => {\n    // Show loading\n    this.setState({\n      loading: true\n    });\n\n    // dispatch an action\n    this.props.dispatch(login(username, password, isRemember)).then(response => {\n      this.setState({loading: false});\n\n      // redirect to /profile page in case of success\n      if (response.isAuthenticated) {\n        this.props.history.push('/profile');\n      } else if (response.data.errors) { // Show error in case of login failed\n        let {status} = response.data;\n        let {errors} = response.data.data;\n\n        if (status === 400) {\n          let errMessages = {};\n          errors.map(item => {\n            errMessages[item.source.pointer] = item.detail;\n          });\n\n          this.setState({\n            error: errMessages\n          });\n        } else {\n          let message = 'Login failed';\n          if (errors) {\n            message = errors.detail || message;\n            this.setState({\n              error : {\n                password: 'Invalid email or password'\n              }\n            });\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <LoginForm\n        onSubmit={this.handleLogin}\n      />\n    );\n  }\n}\n\nexport default connect()(withRouter(Login));\n```\n"}});
//# sourceMappingURL=1.86bc68a3.chunk.js.map